// Copyright (C) 2024  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.1 Build 993 05/14/2024 SC Lite Edition"

// DATE "07/16/2024 19:21:27"

// 
// Device: Altera 5M80ZE64C5 Package EQFP64
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module BoardTest (
	clk,
	reset,
	add_A,
	add_B,
	sum_AB,
	add_ABA,
	add_ABB,
	sum_ABBA,
	small_out,
	counter_out);
input 	clk;
input 	reset;
input 	[2:0] add_A;
input 	[2:0] add_B;
output 	[3:0] sum_AB;
input 	[3:0] add_ABA;
input 	[3:0] add_ABB;
output 	[4:0] sum_ABBA;
output 	[3:0] small_out;
output 	[14:0] counter_out;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Add2~0_combout ;
wire \Add2~2 ;
wire \Add2~2COUT1_21 ;
wire \Add2~5_combout ;
wire \Add2~7 ;
wire \Add2~7COUT1_22 ;
wire \Add2~10_combout ;
wire \Add2~12 ;
wire \Add2~12COUT1_23 ;
wire \Add2~15_combout ;
wire \Add3~0_combout ;
wire \Add3~2 ;
wire \Add3~2COUT1_26 ;
wire \Add3~5_combout ;
wire \Add3~7 ;
wire \Add3~7COUT1_27 ;
wire \Add3~10_combout ;
wire \Add3~12 ;
wire \Add3~12COUT1_28 ;
wire \Add3~15_combout ;
wire \Add3~17 ;
wire \Add3~17COUT1_29 ;
wire \Add3~20_combout ;
wire \clk~combout ;
wire \reset~combout ;
wire \counter_reg[1]~1 ;
wire \counter_reg[1]~1COUT1_30 ;
wire \counter_reg[2]~3 ;
wire \counter_reg[3]~5 ;
wire \counter_reg[3]~5COUT1_31 ;
wire \counter_reg[4]~7 ;
wire \counter_reg[4]~7COUT1_32 ;
wire \counter_reg[5]~9 ;
wire \counter_reg[5]~9COUT1_33 ;
wire \counter_reg[6]~11 ;
wire \counter_reg[6]~11COUT1_34 ;
wire \Equal0~1_combout ;
wire \Equal0~0_combout ;
wire \counter_reg[7]~13 ;
wire \counter_reg[8]~15 ;
wire \counter_reg[8]~15COUT1_35 ;
wire \counter_reg[9]~17 ;
wire \counter_reg[9]~17COUT1_36 ;
wire \counter_reg[10]~19 ;
wire \counter_reg[10]~19COUT1_37 ;
wire \counter_reg[11]~21 ;
wire \counter_reg[11]~21COUT1_38 ;
wire \counter_reg[12]~23 ;
wire \counter_reg[13]~25 ;
wire \counter_reg[13]~25COUT1_39 ;
wire \Equal0~2_combout ;
wire \Equal0~3_combout ;
wire \small_counter[1]~1_combout ;
wire [3:0] small_counter;
wire [14:0] counter_reg;
wire [2:0] \add_B~combout ;
wire [2:0] \add_A~combout ;
wire [3:0] \add_ABB~combout ;
wire [3:0] \add_ABA~combout ;


// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_A[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_A~combout [0]),
	.padio(add_A[0]));
// synopsys translate_off
defparam \add_A[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_B[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_B~combout [0]),
	.padio(add_B[0]));
// synopsys translate_off
defparam \add_B[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxv_lcell \Add2~0 (
// Equation(s):
// \Add2~0_combout  = \add_A~combout [0] $ ((\add_B~combout [0]))
// \Add2~2  = CARRY((\add_A~combout [0] & (\add_B~combout [0])))
// \Add2~2COUT1_21  = CARRY((\add_A~combout [0] & (\add_B~combout [0])))

	.clk(gnd),
	.dataa(\add_A~combout [0]),
	.datab(\add_B~combout [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add2~2 ),
	.cout1(\Add2~2COUT1_21 ));
// synopsys translate_off
defparam \Add2~0 .lut_mask = "6688";
defparam \Add2~0 .operation_mode = "arithmetic";
defparam \Add2~0 .output_mode = "comb_only";
defparam \Add2~0 .register_cascade_mode = "off";
defparam \Add2~0 .sum_lutc_input = "datac";
defparam \Add2~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_A[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_A~combout [1]),
	.padio(add_A[1]));
// synopsys translate_off
defparam \add_A[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_B[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_B~combout [1]),
	.padio(add_B[1]));
// synopsys translate_off
defparam \add_B[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N7
maxv_lcell \Add2~5 (
// Equation(s):
// \Add2~5_combout  = \add_A~combout [1] $ (\add_B~combout [1] $ ((\Add2~2 )))
// \Add2~7  = CARRY((\add_A~combout [1] & (!\add_B~combout [1] & !\Add2~2 )) # (!\add_A~combout [1] & ((!\Add2~2 ) # (!\add_B~combout [1]))))
// \Add2~7COUT1_22  = CARRY((\add_A~combout [1] & (!\add_B~combout [1] & !\Add2~2COUT1_21 )) # (!\add_A~combout [1] & ((!\Add2~2COUT1_21 ) # (!\add_B~combout [1]))))

	.clk(gnd),
	.dataa(\add_A~combout [1]),
	.datab(\add_B~combout [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add2~2 ),
	.cin1(\Add2~2COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add2~7 ),
	.cout1(\Add2~7COUT1_22 ));
// synopsys translate_off
defparam \Add2~5 .cin0_used = "true";
defparam \Add2~5 .cin1_used = "true";
defparam \Add2~5 .lut_mask = "9617";
defparam \Add2~5 .operation_mode = "arithmetic";
defparam \Add2~5 .output_mode = "comb_only";
defparam \Add2~5 .register_cascade_mode = "off";
defparam \Add2~5 .sum_lutc_input = "cin";
defparam \Add2~5 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_A[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_A~combout [2]),
	.padio(add_A[2]));
// synopsys translate_off
defparam \add_A[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_B[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_B~combout [2]),
	.padio(add_B[2]));
// synopsys translate_off
defparam \add_B[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N8
maxv_lcell \Add2~10 (
// Equation(s):
// \Add2~10_combout  = \add_A~combout [2] $ (\add_B~combout [2] $ ((!\Add2~7 )))
// \Add2~12  = CARRY((\add_A~combout [2] & ((\add_B~combout [2]) # (!\Add2~7 ))) # (!\add_A~combout [2] & (\add_B~combout [2] & !\Add2~7 )))
// \Add2~12COUT1_23  = CARRY((\add_A~combout [2] & ((\add_B~combout [2]) # (!\Add2~7COUT1_22 ))) # (!\add_A~combout [2] & (\add_B~combout [2] & !\Add2~7COUT1_22 )))

	.clk(gnd),
	.dataa(\add_A~combout [2]),
	.datab(\add_B~combout [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add2~7 ),
	.cin1(\Add2~7COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add2~12 ),
	.cout1(\Add2~12COUT1_23 ));
// synopsys translate_off
defparam \Add2~10 .cin0_used = "true";
defparam \Add2~10 .cin1_used = "true";
defparam \Add2~10 .lut_mask = "698e";
defparam \Add2~10 .operation_mode = "arithmetic";
defparam \Add2~10 .output_mode = "comb_only";
defparam \Add2~10 .register_cascade_mode = "off";
defparam \Add2~10 .sum_lutc_input = "cin";
defparam \Add2~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxv_lcell \Add2~15 (
// Equation(s):
// \Add2~15_combout  = (((\Add2~12 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add2~12 ),
	.cin1(\Add2~12COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add2~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add2~15 .cin0_used = "true";
defparam \Add2~15 .cin1_used = "true";
defparam \Add2~15 .lut_mask = "f0f0";
defparam \Add2~15 .operation_mode = "normal";
defparam \Add2~15 .output_mode = "comb_only";
defparam \Add2~15 .register_cascade_mode = "off";
defparam \Add2~15 .sum_lutc_input = "cin";
defparam \Add2~15 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_22,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABB[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABB~combout [0]),
	.padio(add_ABB[0]));
// synopsys translate_off
defparam \add_ABB[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABA[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABA~combout [0]),
	.padio(add_ABA[0]));
// synopsys translate_off
defparam \add_ABA[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y1_N5
maxv_lcell \Add3~0 (
// Equation(s):
// \Add3~0_combout  = \add_ABB~combout [0] $ ((\add_ABA~combout [0]))
// \Add3~2  = CARRY((\add_ABB~combout [0] & (\add_ABA~combout [0])))
// \Add3~2COUT1_26  = CARRY((\add_ABB~combout [0] & (\add_ABA~combout [0])))

	.clk(gnd),
	.dataa(\add_ABB~combout [0]),
	.datab(\add_ABA~combout [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add3~2 ),
	.cout1(\Add3~2COUT1_26 ));
// synopsys translate_off
defparam \Add3~0 .lut_mask = "6688";
defparam \Add3~0 .operation_mode = "arithmetic";
defparam \Add3~0 .output_mode = "comb_only";
defparam \Add3~0 .register_cascade_mode = "off";
defparam \Add3~0 .sum_lutc_input = "datac";
defparam \Add3~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABA[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABA~combout [1]),
	.padio(add_ABA[1]));
// synopsys translate_off
defparam \add_ABA[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_24,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABB[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABB~combout [1]),
	.padio(add_ABB[1]));
// synopsys translate_off
defparam \add_ABB[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y1_N6
maxv_lcell \Add3~5 (
// Equation(s):
// \Add3~5_combout  = \add_ABA~combout [1] $ (\add_ABB~combout [1] $ ((\Add3~2 )))
// \Add3~7  = CARRY((\add_ABA~combout [1] & (!\add_ABB~combout [1] & !\Add3~2 )) # (!\add_ABA~combout [1] & ((!\Add3~2 ) # (!\add_ABB~combout [1]))))
// \Add3~7COUT1_27  = CARRY((\add_ABA~combout [1] & (!\add_ABB~combout [1] & !\Add3~2COUT1_26 )) # (!\add_ABA~combout [1] & ((!\Add3~2COUT1_26 ) # (!\add_ABB~combout [1]))))

	.clk(gnd),
	.dataa(\add_ABA~combout [1]),
	.datab(\add_ABB~combout [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add3~2 ),
	.cin1(\Add3~2COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add3~7 ),
	.cout1(\Add3~7COUT1_27 ));
// synopsys translate_off
defparam \Add3~5 .cin0_used = "true";
defparam \Add3~5 .cin1_used = "true";
defparam \Add3~5 .lut_mask = "9617";
defparam \Add3~5 .operation_mode = "arithmetic";
defparam \Add3~5 .output_mode = "comb_only";
defparam \Add3~5 .register_cascade_mode = "off";
defparam \Add3~5 .sum_lutc_input = "cin";
defparam \Add3~5 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_25,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABB[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABB~combout [2]),
	.padio(add_ABB[2]));
// synopsys translate_off
defparam \add_ABB[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABA[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABA~combout [2]),
	.padio(add_ABA[2]));
// synopsys translate_off
defparam \add_ABA[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y1_N7
maxv_lcell \Add3~10 (
// Equation(s):
// \Add3~10_combout  = \add_ABB~combout [2] $ (\add_ABA~combout [2] $ ((!\Add3~7 )))
// \Add3~12  = CARRY((\add_ABB~combout [2] & ((\add_ABA~combout [2]) # (!\Add3~7 ))) # (!\add_ABB~combout [2] & (\add_ABA~combout [2] & !\Add3~7 )))
// \Add3~12COUT1_28  = CARRY((\add_ABB~combout [2] & ((\add_ABA~combout [2]) # (!\Add3~7COUT1_27 ))) # (!\add_ABB~combout [2] & (\add_ABA~combout [2] & !\Add3~7COUT1_27 )))

	.clk(gnd),
	.dataa(\add_ABB~combout [2]),
	.datab(\add_ABA~combout [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add3~7 ),
	.cin1(\Add3~7COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add3~12 ),
	.cout1(\Add3~12COUT1_28 ));
// synopsys translate_off
defparam \Add3~10 .cin0_used = "true";
defparam \Add3~10 .cin1_used = "true";
defparam \Add3~10 .lut_mask = "698e";
defparam \Add3~10 .operation_mode = "arithmetic";
defparam \Add3~10 .output_mode = "comb_only";
defparam \Add3~10 .register_cascade_mode = "off";
defparam \Add3~10 .sum_lutc_input = "cin";
defparam \Add3~10 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABA[3]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABA~combout [3]),
	.padio(add_ABA[3]));
// synopsys translate_off
defparam \add_ABA[3]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_26,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \add_ABB[3]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\add_ABB~combout [3]),
	.padio(add_ABB[3]));
// synopsys translate_off
defparam \add_ABB[3]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y1_N8
maxv_lcell \Add3~15 (
// Equation(s):
// \Add3~15_combout  = \add_ABA~combout [3] $ (\add_ABB~combout [3] $ ((\Add3~12 )))
// \Add3~17  = CARRY((\add_ABA~combout [3] & (!\add_ABB~combout [3] & !\Add3~12 )) # (!\add_ABA~combout [3] & ((!\Add3~12 ) # (!\add_ABB~combout [3]))))
// \Add3~17COUT1_29  = CARRY((\add_ABA~combout [3] & (!\add_ABB~combout [3] & !\Add3~12COUT1_28 )) # (!\add_ABA~combout [3] & ((!\Add3~12COUT1_28 ) # (!\add_ABB~combout [3]))))

	.clk(gnd),
	.dataa(\add_ABA~combout [3]),
	.datab(\add_ABB~combout [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add3~12 ),
	.cin1(\Add3~12COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add3~17 ),
	.cout1(\Add3~17COUT1_29 ));
// synopsys translate_off
defparam \Add3~15 .cin0_used = "true";
defparam \Add3~15 .cin1_used = "true";
defparam \Add3~15 .lut_mask = "9617";
defparam \Add3~15 .operation_mode = "arithmetic";
defparam \Add3~15 .output_mode = "comb_only";
defparam \Add3~15 .register_cascade_mode = "off";
defparam \Add3~15 .sum_lutc_input = "cin";
defparam \Add3~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N9
maxv_lcell \Add3~20 (
// Equation(s):
// \Add3~20_combout  = (((!\Add3~17 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add3~17 ),
	.cin1(\Add3~17COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add3~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add3~20 .cin0_used = "true";
defparam \Add3~20 .cin1_used = "true";
defparam \Add3~20 .lut_mask = "0f0f";
defparam \Add3~20 .operation_mode = "normal";
defparam \Add3~20 .output_mode = "comb_only";
defparam \Add3~20 .register_cascade_mode = "off";
defparam \Add3~20 .sum_lutc_input = "cin";
defparam \Add3~20 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\reset~combout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y4_N1
maxv_lcell \counter_reg[0] (
// Equation(s):
// counter_reg[0] = DFFEAS((((!counter_reg[0]))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(counter_reg[0]),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter_reg[0] .lut_mask = "00ff";
defparam \counter_reg[0] .operation_mode = "normal";
defparam \counter_reg[0] .output_mode = "reg_only";
defparam \counter_reg[0] .register_cascade_mode = "off";
defparam \counter_reg[0] .sum_lutc_input = "datac";
defparam \counter_reg[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N3
maxv_lcell \counter_reg[1] (
// Equation(s):
// counter_reg[1] = DFFEAS(counter_reg[1] $ ((counter_reg[0])), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[1]~1  = CARRY((counter_reg[1] & (counter_reg[0])))
// \counter_reg[1]~1COUT1_30  = CARRY((counter_reg[1] & (counter_reg[0])))

	.clk(\clk~combout ),
	.dataa(counter_reg[1]),
	.datab(counter_reg[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[1]),
	.cout(),
	.cout0(\counter_reg[1]~1 ),
	.cout1(\counter_reg[1]~1COUT1_30 ));
// synopsys translate_off
defparam \counter_reg[1] .lut_mask = "6688";
defparam \counter_reg[1] .operation_mode = "arithmetic";
defparam \counter_reg[1] .output_mode = "reg_only";
defparam \counter_reg[1] .register_cascade_mode = "off";
defparam \counter_reg[1] .sum_lutc_input = "datac";
defparam \counter_reg[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N4
maxv_lcell \counter_reg[2] (
// Equation(s):
// counter_reg[2] = DFFEAS(counter_reg[2] $ ((((\counter_reg[1]~1 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[2]~3  = CARRY(((!\counter_reg[1]~1COUT1_30 )) # (!counter_reg[2]))

	.clk(\clk~combout ),
	.dataa(counter_reg[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\counter_reg[1]~1 ),
	.cin1(\counter_reg[1]~1COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[2]),
	.cout(\counter_reg[2]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter_reg[2] .cin0_used = "true";
defparam \counter_reg[2] .cin1_used = "true";
defparam \counter_reg[2] .lut_mask = "5a5f";
defparam \counter_reg[2] .operation_mode = "arithmetic";
defparam \counter_reg[2] .output_mode = "reg_only";
defparam \counter_reg[2] .register_cascade_mode = "off";
defparam \counter_reg[2] .sum_lutc_input = "cin";
defparam \counter_reg[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N5
maxv_lcell \counter_reg[3] (
// Equation(s):
// counter_reg[3] = DFFEAS(counter_reg[3] $ ((((!\counter_reg[2]~3 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[3]~5  = CARRY((counter_reg[3] & ((!\counter_reg[2]~3 ))))
// \counter_reg[3]~5COUT1_31  = CARRY((counter_reg[3] & ((!\counter_reg[2]~3 ))))

	.clk(\clk~combout ),
	.dataa(counter_reg[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[2]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[3]),
	.cout(),
	.cout0(\counter_reg[3]~5 ),
	.cout1(\counter_reg[3]~5COUT1_31 ));
// synopsys translate_off
defparam \counter_reg[3] .cin_used = "true";
defparam \counter_reg[3] .lut_mask = "a50a";
defparam \counter_reg[3] .operation_mode = "arithmetic";
defparam \counter_reg[3] .output_mode = "reg_only";
defparam \counter_reg[3] .register_cascade_mode = "off";
defparam \counter_reg[3] .sum_lutc_input = "cin";
defparam \counter_reg[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N6
maxv_lcell \counter_reg[4] (
// Equation(s):
// counter_reg[4] = DFFEAS(counter_reg[4] $ (((((!\counter_reg[2]~3  & \counter_reg[3]~5 ) # (\counter_reg[2]~3  & \counter_reg[3]~5COUT1_31 ))))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[4]~7  = CARRY(((!\counter_reg[3]~5 )) # (!counter_reg[4]))
// \counter_reg[4]~7COUT1_32  = CARRY(((!\counter_reg[3]~5COUT1_31 )) # (!counter_reg[4]))

	.clk(\clk~combout ),
	.dataa(counter_reg[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[2]~3 ),
	.cin0(\counter_reg[3]~5 ),
	.cin1(\counter_reg[3]~5COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[4]),
	.cout(),
	.cout0(\counter_reg[4]~7 ),
	.cout1(\counter_reg[4]~7COUT1_32 ));
// synopsys translate_off
defparam \counter_reg[4] .cin0_used = "true";
defparam \counter_reg[4] .cin1_used = "true";
defparam \counter_reg[4] .cin_used = "true";
defparam \counter_reg[4] .lut_mask = "5a5f";
defparam \counter_reg[4] .operation_mode = "arithmetic";
defparam \counter_reg[4] .output_mode = "reg_only";
defparam \counter_reg[4] .register_cascade_mode = "off";
defparam \counter_reg[4] .sum_lutc_input = "cin";
defparam \counter_reg[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N7
maxv_lcell \counter_reg[5] (
// Equation(s):
// counter_reg[5] = DFFEAS((counter_reg[5] $ ((!(!\counter_reg[2]~3  & \counter_reg[4]~7 ) # (\counter_reg[2]~3  & \counter_reg[4]~7COUT1_32 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[5]~9  = CARRY(((counter_reg[5] & !\counter_reg[4]~7 )))
// \counter_reg[5]~9COUT1_33  = CARRY(((counter_reg[5] & !\counter_reg[4]~7COUT1_32 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter_reg[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[2]~3 ),
	.cin0(\counter_reg[4]~7 ),
	.cin1(\counter_reg[4]~7COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[5]),
	.cout(),
	.cout0(\counter_reg[5]~9 ),
	.cout1(\counter_reg[5]~9COUT1_33 ));
// synopsys translate_off
defparam \counter_reg[5] .cin0_used = "true";
defparam \counter_reg[5] .cin1_used = "true";
defparam \counter_reg[5] .cin_used = "true";
defparam \counter_reg[5] .lut_mask = "c30c";
defparam \counter_reg[5] .operation_mode = "arithmetic";
defparam \counter_reg[5] .output_mode = "reg_only";
defparam \counter_reg[5] .register_cascade_mode = "off";
defparam \counter_reg[5] .sum_lutc_input = "cin";
defparam \counter_reg[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N8
maxv_lcell \counter_reg[6] (
// Equation(s):
// counter_reg[6] = DFFEAS(counter_reg[6] $ (((((!\counter_reg[2]~3  & \counter_reg[5]~9 ) # (\counter_reg[2]~3  & \counter_reg[5]~9COUT1_33 ))))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[6]~11  = CARRY(((!\counter_reg[5]~9 )) # (!counter_reg[6]))
// \counter_reg[6]~11COUT1_34  = CARRY(((!\counter_reg[5]~9COUT1_33 )) # (!counter_reg[6]))

	.clk(\clk~combout ),
	.dataa(counter_reg[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[2]~3 ),
	.cin0(\counter_reg[5]~9 ),
	.cin1(\counter_reg[5]~9COUT1_33 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[6]),
	.cout(),
	.cout0(\counter_reg[6]~11 ),
	.cout1(\counter_reg[6]~11COUT1_34 ));
// synopsys translate_off
defparam \counter_reg[6] .cin0_used = "true";
defparam \counter_reg[6] .cin1_used = "true";
defparam \counter_reg[6] .cin_used = "true";
defparam \counter_reg[6] .lut_mask = "5a5f";
defparam \counter_reg[6] .operation_mode = "arithmetic";
defparam \counter_reg[6] .output_mode = "reg_only";
defparam \counter_reg[6] .register_cascade_mode = "off";
defparam \counter_reg[6] .sum_lutc_input = "cin";
defparam \counter_reg[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxv_lcell \counter_reg[7] (
// Equation(s):
// counter_reg[7] = DFFEAS((counter_reg[7] $ ((!(!\counter_reg[2]~3  & \counter_reg[6]~11 ) # (\counter_reg[2]~3  & \counter_reg[6]~11COUT1_34 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[7]~13  = CARRY(((counter_reg[7] & !\counter_reg[6]~11COUT1_34 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter_reg[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[2]~3 ),
	.cin0(\counter_reg[6]~11 ),
	.cin1(\counter_reg[6]~11COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[7]),
	.cout(\counter_reg[7]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter_reg[7] .cin0_used = "true";
defparam \counter_reg[7] .cin1_used = "true";
defparam \counter_reg[7] .cin_used = "true";
defparam \counter_reg[7] .lut_mask = "c30c";
defparam \counter_reg[7] .operation_mode = "arithmetic";
defparam \counter_reg[7] .output_mode = "reg_only";
defparam \counter_reg[7] .register_cascade_mode = "off";
defparam \counter_reg[7] .sum_lutc_input = "cin";
defparam \counter_reg[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxv_lcell \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = (counter_reg[7] & (counter_reg[4] & (counter_reg[6] & counter_reg[5])))

	.clk(gnd),
	.dataa(counter_reg[7]),
	.datab(counter_reg[4]),
	.datac(counter_reg[6]),
	.datad(counter_reg[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~1 .lut_mask = "8000";
defparam \Equal0~1 .operation_mode = "normal";
defparam \Equal0~1 .output_mode = "comb_only";
defparam \Equal0~1 .register_cascade_mode = "off";
defparam \Equal0~1 .sum_lutc_input = "datac";
defparam \Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N0
maxv_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (counter_reg[2] & (counter_reg[0] & (counter_reg[3] & counter_reg[1])))

	.clk(gnd),
	.dataa(counter_reg[2]),
	.datab(counter_reg[0]),
	.datac(counter_reg[3]),
	.datad(counter_reg[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = "8000";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .register_cascade_mode = "off";
defparam \Equal0~0 .sum_lutc_input = "datac";
defparam \Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N0
maxv_lcell \counter_reg[8] (
// Equation(s):
// counter_reg[8] = DFFEAS((counter_reg[8] $ ((\counter_reg[7]~13 ))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[8]~15  = CARRY(((!\counter_reg[7]~13 ) # (!counter_reg[8])))
// \counter_reg[8]~15COUT1_35  = CARRY(((!\counter_reg[7]~13 ) # (!counter_reg[8])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter_reg[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[7]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[8]),
	.cout(),
	.cout0(\counter_reg[8]~15 ),
	.cout1(\counter_reg[8]~15COUT1_35 ));
// synopsys translate_off
defparam \counter_reg[8] .cin_used = "true";
defparam \counter_reg[8] .lut_mask = "3c3f";
defparam \counter_reg[8] .operation_mode = "arithmetic";
defparam \counter_reg[8] .output_mode = "reg_only";
defparam \counter_reg[8] .register_cascade_mode = "off";
defparam \counter_reg[8] .sum_lutc_input = "cin";
defparam \counter_reg[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N1
maxv_lcell \counter_reg[9] (
// Equation(s):
// counter_reg[9] = DFFEAS((counter_reg[9] $ ((!(!\counter_reg[7]~13  & \counter_reg[8]~15 ) # (\counter_reg[7]~13  & \counter_reg[8]~15COUT1_35 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[9]~17  = CARRY(((counter_reg[9] & !\counter_reg[8]~15 )))
// \counter_reg[9]~17COUT1_36  = CARRY(((counter_reg[9] & !\counter_reg[8]~15COUT1_35 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter_reg[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[7]~13 ),
	.cin0(\counter_reg[8]~15 ),
	.cin1(\counter_reg[8]~15COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[9]),
	.cout(),
	.cout0(\counter_reg[9]~17 ),
	.cout1(\counter_reg[9]~17COUT1_36 ));
// synopsys translate_off
defparam \counter_reg[9] .cin0_used = "true";
defparam \counter_reg[9] .cin1_used = "true";
defparam \counter_reg[9] .cin_used = "true";
defparam \counter_reg[9] .lut_mask = "c30c";
defparam \counter_reg[9] .operation_mode = "arithmetic";
defparam \counter_reg[9] .output_mode = "reg_only";
defparam \counter_reg[9] .register_cascade_mode = "off";
defparam \counter_reg[9] .sum_lutc_input = "cin";
defparam \counter_reg[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N2
maxv_lcell \counter_reg[10] (
// Equation(s):
// counter_reg[10] = DFFEAS((counter_reg[10] $ (((!\counter_reg[7]~13  & \counter_reg[9]~17 ) # (\counter_reg[7]~13  & \counter_reg[9]~17COUT1_36 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[10]~19  = CARRY(((!\counter_reg[9]~17 ) # (!counter_reg[10])))
// \counter_reg[10]~19COUT1_37  = CARRY(((!\counter_reg[9]~17COUT1_36 ) # (!counter_reg[10])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(counter_reg[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[7]~13 ),
	.cin0(\counter_reg[9]~17 ),
	.cin1(\counter_reg[9]~17COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[10]),
	.cout(),
	.cout0(\counter_reg[10]~19 ),
	.cout1(\counter_reg[10]~19COUT1_37 ));
// synopsys translate_off
defparam \counter_reg[10] .cin0_used = "true";
defparam \counter_reg[10] .cin1_used = "true";
defparam \counter_reg[10] .cin_used = "true";
defparam \counter_reg[10] .lut_mask = "3c3f";
defparam \counter_reg[10] .operation_mode = "arithmetic";
defparam \counter_reg[10] .output_mode = "reg_only";
defparam \counter_reg[10] .register_cascade_mode = "off";
defparam \counter_reg[10] .sum_lutc_input = "cin";
defparam \counter_reg[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxv_lcell \counter_reg[11] (
// Equation(s):
// counter_reg[11] = DFFEAS(counter_reg[11] $ ((((!(!\counter_reg[7]~13  & \counter_reg[10]~19 ) # (\counter_reg[7]~13  & \counter_reg[10]~19COUT1_37 ))))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[11]~21  = CARRY((counter_reg[11] & ((!\counter_reg[10]~19 ))))
// \counter_reg[11]~21COUT1_38  = CARRY((counter_reg[11] & ((!\counter_reg[10]~19COUT1_37 ))))

	.clk(\clk~combout ),
	.dataa(counter_reg[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[7]~13 ),
	.cin0(\counter_reg[10]~19 ),
	.cin1(\counter_reg[10]~19COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[11]),
	.cout(),
	.cout0(\counter_reg[11]~21 ),
	.cout1(\counter_reg[11]~21COUT1_38 ));
// synopsys translate_off
defparam \counter_reg[11] .cin0_used = "true";
defparam \counter_reg[11] .cin1_used = "true";
defparam \counter_reg[11] .cin_used = "true";
defparam \counter_reg[11] .lut_mask = "a50a";
defparam \counter_reg[11] .operation_mode = "arithmetic";
defparam \counter_reg[11] .output_mode = "reg_only";
defparam \counter_reg[11] .register_cascade_mode = "off";
defparam \counter_reg[11] .sum_lutc_input = "cin";
defparam \counter_reg[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxv_lcell \counter_reg[12] (
// Equation(s):
// counter_reg[12] = DFFEAS(counter_reg[12] $ (((((!\counter_reg[7]~13  & \counter_reg[11]~21 ) # (\counter_reg[7]~13  & \counter_reg[11]~21COUT1_38 ))))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[12]~23  = CARRY(((!\counter_reg[11]~21COUT1_38 )) # (!counter_reg[12]))

	.clk(\clk~combout ),
	.dataa(counter_reg[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[7]~13 ),
	.cin0(\counter_reg[11]~21 ),
	.cin1(\counter_reg[11]~21COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[12]),
	.cout(\counter_reg[12]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter_reg[12] .cin0_used = "true";
defparam \counter_reg[12] .cin1_used = "true";
defparam \counter_reg[12] .cin_used = "true";
defparam \counter_reg[12] .lut_mask = "5a5f";
defparam \counter_reg[12] .operation_mode = "arithmetic";
defparam \counter_reg[12] .output_mode = "reg_only";
defparam \counter_reg[12] .register_cascade_mode = "off";
defparam \counter_reg[12] .sum_lutc_input = "cin";
defparam \counter_reg[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxv_lcell \counter_reg[13] (
// Equation(s):
// counter_reg[13] = DFFEAS(counter_reg[13] $ ((((!\counter_reg[12]~23 )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )
// \counter_reg[13]~25  = CARRY((counter_reg[13] & ((!\counter_reg[12]~23 ))))
// \counter_reg[13]~25COUT1_39  = CARRY((counter_reg[13] & ((!\counter_reg[12]~23 ))))

	.clk(\clk~combout ),
	.dataa(counter_reg[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[12]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[13]),
	.cout(),
	.cout0(\counter_reg[13]~25 ),
	.cout1(\counter_reg[13]~25COUT1_39 ));
// synopsys translate_off
defparam \counter_reg[13] .cin_used = "true";
defparam \counter_reg[13] .lut_mask = "a50a";
defparam \counter_reg[13] .operation_mode = "arithmetic";
defparam \counter_reg[13] .output_mode = "reg_only";
defparam \counter_reg[13] .register_cascade_mode = "off";
defparam \counter_reg[13] .sum_lutc_input = "cin";
defparam \counter_reg[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxv_lcell \counter_reg[14] (
// Equation(s):
// counter_reg[14] = DFFEAS((((!\counter_reg[12]~23  & \counter_reg[13]~25 ) # (\counter_reg[12]~23  & \counter_reg[13]~25COUT1_39 ) $ (counter_reg[14]))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(counter_reg[14]),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\counter_reg[12]~23 ),
	.cin0(\counter_reg[13]~25 ),
	.cin1(\counter_reg[13]~25COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(counter_reg[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \counter_reg[14] .cin0_used = "true";
defparam \counter_reg[14] .cin1_used = "true";
defparam \counter_reg[14] .cin_used = "true";
defparam \counter_reg[14] .lut_mask = "0ff0";
defparam \counter_reg[14] .operation_mode = "normal";
defparam \counter_reg[14] .output_mode = "reg_only";
defparam \counter_reg[14] .register_cascade_mode = "off";
defparam \counter_reg[14] .sum_lutc_input = "cin";
defparam \counter_reg[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxv_lcell \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = (counter_reg[11] & (counter_reg[9] & (counter_reg[8] & counter_reg[10])))

	.clk(gnd),
	.dataa(counter_reg[11]),
	.datab(counter_reg[9]),
	.datac(counter_reg[8]),
	.datad(counter_reg[10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~2 .lut_mask = "8000";
defparam \Equal0~2 .operation_mode = "normal";
defparam \Equal0~2 .output_mode = "comb_only";
defparam \Equal0~2 .register_cascade_mode = "off";
defparam \Equal0~2 .sum_lutc_input = "datac";
defparam \Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxv_lcell \Equal0~3 (
// Equation(s):
// \Equal0~3_combout  = (counter_reg[12] & (counter_reg[14] & (counter_reg[13] & \Equal0~2_combout )))

	.clk(gnd),
	.dataa(counter_reg[12]),
	.datab(counter_reg[14]),
	.datac(counter_reg[13]),
	.datad(\Equal0~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~3 .lut_mask = "8000";
defparam \Equal0~3 .operation_mode = "normal";
defparam \Equal0~3 .output_mode = "comb_only";
defparam \Equal0~3 .register_cascade_mode = "off";
defparam \Equal0~3 .sum_lutc_input = "datac";
defparam \Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N6
maxv_lcell \small_counter[0] (
// Equation(s):
// small_counter[0] = DFFEAS(small_counter[0] $ (((\Equal0~1_combout  & (\Equal0~0_combout  & \Equal0~3_combout )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(small_counter[0]),
	.datab(\Equal0~1_combout ),
	.datac(\Equal0~0_combout ),
	.datad(\Equal0~3_combout ),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(small_counter[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \small_counter[0] .lut_mask = "6aaa";
defparam \small_counter[0] .operation_mode = "normal";
defparam \small_counter[0] .output_mode = "reg_only";
defparam \small_counter[0] .register_cascade_mode = "off";
defparam \small_counter[0] .sum_lutc_input = "datac";
defparam \small_counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N8
maxv_lcell \small_counter[1]~1 (
// Equation(s):
// \small_counter[1]~1_combout  = (small_counter[0] & (\Equal0~1_combout  & (\Equal0~3_combout  & \Equal0~0_combout )))

	.clk(gnd),
	.dataa(small_counter[0]),
	.datab(\Equal0~1_combout ),
	.datac(\Equal0~3_combout ),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\small_counter[1]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \small_counter[1]~1 .lut_mask = "8000";
defparam \small_counter[1]~1 .operation_mode = "normal";
defparam \small_counter[1]~1 .output_mode = "comb_only";
defparam \small_counter[1]~1 .register_cascade_mode = "off";
defparam \small_counter[1]~1 .sum_lutc_input = "datac";
defparam \small_counter[1]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N9
maxv_lcell \small_counter[1] (
// Equation(s):
// small_counter[1] = DFFEAS((small_counter[1] $ (((\small_counter[1]~1_combout )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(small_counter[1]),
	.datac(vcc),
	.datad(\small_counter[1]~1_combout ),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(small_counter[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \small_counter[1] .lut_mask = "33cc";
defparam \small_counter[1] .operation_mode = "normal";
defparam \small_counter[1] .output_mode = "reg_only";
defparam \small_counter[1] .register_cascade_mode = "off";
defparam \small_counter[1] .sum_lutc_input = "datac";
defparam \small_counter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N5
maxv_lcell \small_counter[2] (
// Equation(s):
// small_counter[2] = DFFEAS((small_counter[2] $ (((small_counter[1] & \small_counter[1]~1_combout )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(small_counter[1]),
	.datac(small_counter[2]),
	.datad(\small_counter[1]~1_combout ),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(small_counter[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \small_counter[2] .lut_mask = "3cf0";
defparam \small_counter[2] .operation_mode = "normal";
defparam \small_counter[2] .output_mode = "reg_only";
defparam \small_counter[2] .register_cascade_mode = "off";
defparam \small_counter[2] .sum_lutc_input = "datac";
defparam \small_counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N7
maxv_lcell \small_counter[3] (
// Equation(s):
// small_counter[3] = DFFEAS(small_counter[3] $ (((small_counter[2] & (small_counter[1] & \small_counter[1]~1_combout )))), GLOBAL(\clk~combout ), GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(small_counter[2]),
	.datab(small_counter[1]),
	.datac(small_counter[3]),
	.datad(\small_counter[1]~1_combout ),
	.aclr(!\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(small_counter[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \small_counter[3] .lut_mask = "78f0";
defparam \small_counter[3] .operation_mode = "normal";
defparam \small_counter[3] .output_mode = "reg_only";
defparam \small_counter[3] .register_cascade_mode = "off";
defparam \small_counter[3] .sum_lutc_input = "datac";
defparam \small_counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_AB[0]~I (
	.datain(\Add2~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_AB[0]));
// synopsys translate_off
defparam \sum_AB[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_AB[1]~I (
	.datain(\Add2~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_AB[1]));
// synopsys translate_off
defparam \sum_AB[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_AB[2]~I (
	.datain(\Add2~10_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_AB[2]));
// synopsys translate_off
defparam \sum_AB[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_AB[3]~I (
	.datain(\Add2~15_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_AB[3]));
// synopsys translate_off
defparam \sum_AB[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_27,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_ABBA[0]~I (
	.datain(\Add3~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_ABBA[0]));
// synopsys translate_off
defparam \sum_ABBA[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_28,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_ABBA[1]~I (
	.datain(\Add3~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_ABBA[1]));
// synopsys translate_off
defparam \sum_ABBA[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_29,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_ABBA[2]~I (
	.datain(\Add3~10_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_ABBA[2]));
// synopsys translate_off
defparam \sum_ABBA[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_ABBA[3]~I (
	.datain(\Add3~15_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_ABBA[3]));
// synopsys translate_off
defparam \sum_ABBA[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_31,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \sum_ABBA[4]~I (
	.datain(\Add3~20_combout ),
	.oe(vcc),
	.combout(),
	.padio(sum_ABBA[4]));
// synopsys translate_off
defparam \sum_ABBA[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_32,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \small_out[0]~I (
	.datain(small_counter[0]),
	.oe(vcc),
	.combout(),
	.padio(small_out[0]));
// synopsys translate_off
defparam \small_out[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_33,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \small_out[1]~I (
	.datain(small_counter[1]),
	.oe(vcc),
	.combout(),
	.padio(small_out[1]));
// synopsys translate_off
defparam \small_out[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \small_out[2]~I (
	.datain(small_counter[2]),
	.oe(vcc),
	.combout(),
	.padio(small_out[2]));
// synopsys translate_off
defparam \small_out[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_35,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \small_out[3]~I (
	.datain(small_counter[3]),
	.oe(vcc),
	.combout(),
	.padio(small_out[3]));
// synopsys translate_off
defparam \small_out[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_43,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[0]~I (
	.datain(counter_reg[0]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[0]));
// synopsys translate_off
defparam \counter_out[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_44,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[1]~I (
	.datain(counter_reg[1]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[1]));
// synopsys translate_off
defparam \counter_out[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_45,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[2]~I (
	.datain(counter_reg[2]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[2]));
// synopsys translate_off
defparam \counter_out[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_46,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[3]~I (
	.datain(counter_reg[3]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[3]));
// synopsys translate_off
defparam \counter_out[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_47,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[4]~I (
	.datain(counter_reg[4]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[4]));
// synopsys translate_off
defparam \counter_out[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[5]~I (
	.datain(counter_reg[5]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[5]));
// synopsys translate_off
defparam \counter_out[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[6]~I (
	.datain(counter_reg[6]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[6]));
// synopsys translate_off
defparam \counter_out[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_50,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[7]~I (
	.datain(counter_reg[7]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[7]));
// synopsys translate_off
defparam \counter_out[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_51,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[8]~I (
	.datain(counter_reg[8]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[8]));
// synopsys translate_off
defparam \counter_out[8]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[9]~I (
	.datain(counter_reg[9]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[9]));
// synopsys translate_off
defparam \counter_out[9]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[10]~I (
	.datain(counter_reg[10]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[10]));
// synopsys translate_off
defparam \counter_out[10]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_54,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[11]~I (
	.datain(counter_reg[11]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[11]));
// synopsys translate_off
defparam \counter_out[11]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_55,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[12]~I (
	.datain(counter_reg[12]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[12]));
// synopsys translate_off
defparam \counter_out[12]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_56,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[13]~I (
	.datain(counter_reg[13]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[13]));
// synopsys translate_off
defparam \counter_out[13]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_58,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \counter_out[14]~I (
	.datain(counter_reg[14]),
	.oe(vcc),
	.combout(),
	.padio(counter_out[14]));
// synopsys translate_off
defparam \counter_out[14]~I .operation_mode = "output";
// synopsys translate_on

endmodule
